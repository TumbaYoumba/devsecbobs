# SETTINGS

# For all stages below
.for_secrets_scan:
  stage: secrets-scan
  extends:
    - .upload-report
    - .needs_init
    - .allow_failure
    - .tags

# Only for secret scanners
.secrets:
  rules:
    - if: '$SEC_SECRETS_SCAN_ENABLE == "true"' 
    - exists:
      - '**/*.go'
      - '**/*.php'
      - '**/*.java'
      - '**/*.js'
      - '**/*.py'
      - '**/*.php'
      - '**/*.rb'
      - '**/*.yaml'
      - '**/*.yml'
      - '**/*.conf'
      - '**/*.cnf'

# SECRETS

scan:trufflehog3:
  variables:
    SCAN_TYPE: 'Trufflehog3 Scan'
    REPORT_FILE_NAME: 'trufflehog3.json'
    DD_GROUP_BY: 'file_path'
    SEC_TRUFFLEHOG_MAX_DEPTH: 100
    SEC_TRUFFLEHOG_FOLDER: ${SEC_CODE_FOLDER}
  image: "$CI_REGISTRY/$SEC_PATH_TO_IMAGES/trufflehog3:$SEC_TRUFFLEHOG3_VER"
  script:
    - echo "Scanning code with - $CI_REGISTRY_IMAGE"
    # ./$SEC_CODE_FOLDER -> CI_PROJECT_DIR if does not work
    - trufflehog3 ./$SEC_TRUFFLEHOG_FOLDER --no-history --format json > $REPORT_FILE_NAME || true
  extends: 
    - .for_secrets_scan
    - .secrets

scan:gitleaks:
  variables:
    SCAN_TYPE: 'Gitleaks Scan'
    REPORT_FILE_NAME: 'gitleaks.json'
    DD_GROUP_BY: 'file_path'
  image: "$CI_REGISTRY/$SEC_PATH_TO_IMAGES/gitleaks:$SEC_GITLEAKS_VER"
  script:
    - echo "Scanning code with - $CI_REGISTRY_IMAGE"
    # Version 7 stable
    # - gitleaks -v --path=./$SEC_CODE_FOLDER --report=$REPORT_FILE_NAME --format=json || true
    # Version 8 does not work properly sometimes
    - gitleaks detect -s ./$SEC_CODE_FOLDER -r $REPORT_FILE_NAME --config=/opt/gitleaks.toml || true
  extends: 
    - .for_secrets_scan
    - .secrets
    # to mask commits add file gitleaks.toml
    # - gitleaks -v --repo-path=./$SEC_CODE_FOLDER --config=gitleaks.toml
    # [whitelist]
    # commits = [
    # "213c603d16c07d8b7252b62b694104e7e01c1f59",
    # "444f28d5437ad3127702bf1b0779ae6cd00ab146",
    # ]
